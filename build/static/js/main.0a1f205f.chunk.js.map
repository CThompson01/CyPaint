{"version":3,"sources":["ToolIcon.js","ToolPanel.js","pen.svg","tool.js","pencilTool.js","eraser.svg","eraserTool.js","CanvasPage.js","HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["ToolIcon","props","className","id","tool","onClick","src","icon","width","height","alt","name","ToolPanel","toolList","map","index","setCurrentTool","onToolClick","String","Tool","mousePos","color","ctx","PencilTool","pen","fillRect","x","y","EraserTool","eraser","clearRect","tools","CanvasPage","useState","currentTool","mouseDown","setMouseDown","canvasRef","useRef","current","getContext","useEffect","fill","ref","onMouseUp","e","pageX","pageY","onMouseDown","onMouseMove","HomePage","createBlankCanvas","App","currentPage","setCurrentPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a1f205f.chunk.js","sourcesContent":["import './ToolIcon.css'\r\n\r\n/**\r\n * Tool Icon\r\n * @param {Tool} props.tool the tool this icon uses\r\n * @param {function} props.onClick callback fired when this tool is clicked\r\n */\r\nexport function ToolIcon(props) {\r\n\treturn (\r\n\t\t<div className=\"ToolIcon\" id={props.tool.id} onClick={props.onClick}>\r\n\t\t\t<img src={props.tool.icon} width=\"20\" height=\"20\" alt={props.tool.name} />\r\n\t\t</div>\r\n\t)\r\n}","import './ToolPanel.css'\r\nimport { ToolIcon } from './ToolIcon'\r\n\r\n/**\r\n * Tool Panel\r\n * @param {Tool} props.currentTool Current tool\r\n * @param {Tool[]} props.toolList List of all tools\r\n * @param {function} props.setCurrentTool Set current tool\r\n * @returns \r\n */\r\nexport function ToolPanel(props) {\r\n\t/**\r\n\t * Callback fired when a tool is clicked\r\n\t * @param {Tool} tool the tool that was pressed\r\n\t */\r\n\tfunction onToolClick(tool) {\r\n\t\tprops.setCurrentTool(tool)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"mainToolPanel\">\r\n\t\t\t{props.toolList.map((tool, index) => <ToolIcon key={String(index)} tool={tool} onClick={() => onToolClick(tool)} />)}\r\n\t\t</div>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/pen.27ec406e.svg\";","export class Tool {\r\n\t/**\r\n\t * The icon to display for this tool\r\n\t */\r\n\ticon\r\n\r\n\t/**\r\n\t * The name of this tool\r\n\t */\r\n\tname\r\n\r\n\t/**\r\n\t * Unique id of tool\r\n\t */\r\n\tid\r\n\r\n\t/**\r\n\t * Method fired when the mouse is released on the canvas\r\n\t * @param {object} mousePos mouse position\r\n\t * @param {string} color selected color\r\n\t * @param {CanvasRenderingContext2D} ctx canvas context\r\n\t */\r\n\tonMouseUp(mousePos, color, ctx) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Method fired when the mouse is move while clicked down on the canvas\r\n\t * @param {object} mousePos mouse position\r\n\t * @param {string} color selected color\r\n\t * @param {CanvasRenderingContext2D} ctx canvas context\r\n\t */\r\n\tonMouseMove(mousePos, color, ctx) {\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Method fired when the mouse is clicked down on the canvas\r\n\t * @param {object} mousePos mouse position\r\n\t * @param {string} color selected color\r\n\t * @param {CanvasRenderingContext2D} ctx canvas context\r\n\t */\r\n\tonMouseDown(mousePos, color, ctx) {\r\n\r\n\t}\r\n}\r\n","import pen from './pen.svg'\r\nimport { Tool } from './tool'\r\n\r\nexport class PencilTool extends Tool {\r\n\ticon = pen\r\n\tname = 'Pencil Tool'\r\n\tid = 'tool.pencil'\r\n\r\n\tonMouseMove(mousePos, ctx) {\r\n\t\tctx.fillRect(mousePos.x, mousePos.y, 1, 1)\r\n\t}\r\n}","export default __webpack_public_path__ + \"static/media/eraser.c305546a.svg\";","import eraser from './eraser.svg'\r\nimport { Tool } from './tool'\r\n\r\nexport class EraserTool extends Tool {\r\n    icon = eraser\r\n    name = 'Eraser Tool'\r\n    id = 'tool.eraser'\r\n\r\n    onMouseMove(mousePos,color, ctx) {\r\n        ctx.clearRect(mousePos.x, mousePos.y, 1, 1)\r\n    }\r\n}","import './CanvasPage.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { ToolPanel } from './ToolPanel';\r\nimport { PencilTool } from './pencilTool';\r\nimport { EraserTool } from './eraserTool';\r\n\r\n/**\r\n * An instance of each tool\r\n */\r\n const tools = [\r\n\tnew PencilTool(),\r\n\tnew EraserTool()\r\n]\r\n\r\nconst CANVAS_WIDTH = 600;\r\nconst CANVAS_HEIGHT = 400;\r\n\r\n/**\r\n * Canvas Page\r\n */\r\nexport function CanvasPage() {\r\n\tconst [currentTool, setCurrentTool] = useState(tools[0]);\r\n\tconst [mouseDown, setMouseDown] = useState(false);\r\n\tconst [color] = useState('black');\r\n\tconst canvasRef = useRef();\r\n\tconst ctx =  canvasRef.current?.getContext('2d');\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!!ctx) {\r\n\t\t\tctx.fill = color;\r\n\t\t}\r\n\t}, [ctx, color]);\r\n\r\n\tfunction onMouseUp(e) {\r\n\t\tsetMouseDown(false);\r\n\t\tcurrentTool.onMouseUp({x: e.pageX - 200, y: e.pageY}, ctx);\r\n\t}\r\n\r\n\tfunction onMouseDown(e) {\r\n\t\tsetMouseDown(true);\r\n\t\tcurrentTool.onMouseDown({x: e.pageX - 200, y: e.pageY}, ctx);\r\n\t}\r\n\r\n\tfunction onMouseMove(e) {\r\n\t\tif (mouseDown) {\r\n\t\t\tcurrentTool.onMouseMove({x: e.pageX - 200, y: e.pageY}, ctx);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"canvasPageContainer\">\r\n\t\t\t<ToolPanel\r\n\t\t\t\tcurrentTool={currentTool}\r\n\t\t\t\ttoolList={tools}\r\n\t\t\t\tsetCurrentTool={setCurrentTool} />\r\n\t\t\t<canvas\r\n\t\t\t\tid=\"mainCanvas\"\r\n\t\t\t\tref={canvasRef}\r\n\t\t\t\twidth={CANVAS_WIDTH}\r\n\t\t\t\theight={CANVAS_HEIGHT}\r\n\t\t\t\tonMouseUp={onMouseUp}\r\n\t\t\t\tonMouseDown={onMouseDown}\r\n\t\t\t\tonMouseMove={onMouseMove} />\r\n\t\t</div>\r\n\t)\r\n}","import './HomePage.css';\r\n\r\n/**\r\n * Home Page\r\n * @param {function} props.createBlankCanvas callback fired when user wants to create blank canvas\r\n */\r\nexport function HomePage(props) {\r\n\treturn (\r\n\t\t<div id=\"homePageContainer\">\r\n\t\t\t<span>CyPaint</span>\r\n\t\t\t<br />\r\n\t\t\t<button id=\"create-blank-canvas-button\" onClick={props.createBlankCanvas}>Create Blank Canvas</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import './App.css'\r\nimport { useState } from 'react'\r\nimport { CanvasPage } from './CanvasPage'\r\nimport { HomePage } from './HomePage'\r\n\r\nfunction App() {\r\n\tconst [currentPage, setCurrentPage] = useState('home')\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{currentPage === 'canvas' ? (\r\n\t\t\t\t<CanvasPage />\r\n\t\t\t) : (\r\n\t\t\t\t<HomePage createBlankCanvas={() => setCurrentPage('canvas')} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}